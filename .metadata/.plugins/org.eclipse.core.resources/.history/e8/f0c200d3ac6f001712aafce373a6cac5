package com.mecathronic;

import java.awt.Canvas;

public class Game extends Canvas implements Runnable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private boolean isRunning = false;
	private Thread thread;

	public Game() {
		new Window(1000, 563, "Wizard Game", this);
		start();
	}

	private void start() {
		isRunning = true;
		thread = new Thread(this);
		thread.start();
	}

	private void stop() {
		isRunning = false;
		try {
			thread.join();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	public void run() {
		this.requestFocus();
		long lastTime = System.nanoTime();
		double ticks = 60.0;
		double ns = 1000000000 / ticks;
		double delta = 0;
		long timer = System.currentTimeMillis();
		int frames = 0;
		int updates = 0;
		while (isRunning) {
			long now = System.nanoTime();
			delta += (now - lastTime) / ns;
			lastTime = now;
			while (delta >= 1) {
				update();
				delta--;
				++updates;
			}
			render();
			++frames;
			if (System.currentTimeMillis() - timer > 1000) {
				System.out.println("update = " + updates + ", frames = " + frames);

				timer += 1000;
				frames = 0;
				updates = 0;

			}
		}
		stop();
	}

	public void update() {

	}

	public void render() {

	}

	public static void main(String args[]) {

		new Game();

	}

}
